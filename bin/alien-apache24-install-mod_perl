#!/usr/bin/perl

use strict;
use warnings;
use autodie qw( :all );
use Alien::Apache24;
use Env qw( @PATH );
use File::Which qw( which );
use Config;
use File::chdir;
use HTTP::Tiny;
use JSON::PP qw( decode_json );
use File::Temp qw( tempdir );
use URI;

# PODNAME: alien-apache24-install-mod_perl
# ABSTRACT: Install mod_perl
# VERSION

=head1 SYNOPSIS

 % alien-apache24-install-mod_perl

=head1 DESCRIPTION

Download mod_perl from CPAN and attempt to install it.

Notes:

=over 4

=item may patch mod_perl before attempting to install

=item will run the mod_perl test suite prior to installing

=item will install without prompting if the test suite passes

=item will prompt the user to install anyway if the test suite fails

=back

=cut

unshift @PATH, Alien::Apache24->bin_dir;
print "+PATH=$PATH[0]:\$PATH\n";

print "+which apxs\n";
my $apxs = which 'apxs';

if($apxs)
{
  print $apxs, "\n";
}
else
{
  die "unable to find apxs";
}

sub run
{
  my @command = @_;
  print "+@command\n";
  system @command;
}

my $url = 'https://api.metacpan.org/release/mod_perl';
print "+# download $url\n";
my $response = HTTP::Tiny->new->get($url);
die join(' ', $response->{status}, $response->{reason}, $url) unless $response->{success};
$response = decode_json($response->{content});

$url = URI->new($response->{download_url});
print "+# download $url\n";
$response = HTTP::Tiny->new->get($url);
die join(' ', $response->{status}, $response->{reason}, $url) unless $response->{success};
$response = $response->{content};

do {
  my $dir = tempdir( CLEANUP => 1);
  print "+cd $dir\n";
  local $CWD = $dir;

  my $fn = $url->path;
  $fn =~ s/^.*\///g;

  print "+# write $fn\n";
  open my $fh, '>', $fn;
  binmode $fh;
  print $fh $response;
  close $fh;

  run 'tar', 'zxvf', $fn;

  do {
    opendir my $dh, '.';
    my($dir) = grep { -d $_ } grep !/^\./, readdir $dh;
    closedir $dh;
  
    print "+cd $dir\n";
    $CWD = $dir;
  };

  my @Makefile_PL_args = ("MP_APXS=$apxs");

  push @Makefile_PL_args, 'MP_CCOPTS=-std=gnu89' if $Config{cc} eq 'clang';

  run $^X, 'Makefile.PL', @Makefile_PL_args;
  run 'make';
  eval { run 'make', 'test' };

  if($@)
  {
    warn "make test failed";
    print "install anyway? ";
    my $yn = <STDIN>;
    exit 2 unless $yn =~ /^y/i;
  }

  run 'make', 'install';
};
